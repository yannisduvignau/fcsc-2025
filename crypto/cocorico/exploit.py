import json
from zlib import crc32

def to_bytes_crc(data):
    return int.to_bytes(crc32(data), 4, 'big')

def xor(a, b):
    return bytes(x ^ y for x, y in zip(a, b))

# Step 1: Known user (you should've registered with this)
known_user = {
    "name": "bob",
    "admin": False
}
known_json = json.dumps(known_user).encode()
known_crc = to_bytes_crc(known_json)
known_plaintext = known_json + known_crc

# Step 2: Paste your token (from the challenge output after registering)
# Example: '5d8c1a8ff9a5b52f...'
your_token_hex = input("Paste your token (hex): ").strip()
ciphertext = bytes.fromhex(your_token_hex)

# Step 3: Recover keystream
keystream = xor(ciphertext, known_plaintext)

# Step 4: Craft malicious JSON
malicious_user = {
    "name": "toto",
    "admin": True
}
malicious_json = json.dumps(malicious_user).encode()
malicious_crc = to_bytes_crc(malicious_json)
malicious_plaintext = malicious_json + malicious_crc

# Step 5: Forge malicious token
malicious_token = xor(malicious_plaintext, keystream)
print("\nðŸŽ¯ Use this forged token to log in as admin:")
print(malicious_token.hex())
